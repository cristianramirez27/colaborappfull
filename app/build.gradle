/*apply plugin: 'com.android.application'
apply plugin: 'realm-android'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-parcelize'
apply plugin: 'com.jakewharton.butterknife'*/
plugins {
    id 'com.android.application'
    id 'realm-android'
    id 'kotlin-android'
    id 'kotlin-parcelize'
    id 'com.jakewharton.butterknife'
}

android {
    namespace "com.coppel.rhconecta.dev"
    compileSdk 34
    defaultConfig {
        minSdk 23
        targetSdk 34
        versionName "3.3.0"
        versionCode 146
        testInstrumentationRunner 'androidx.test.runner.AndroidJUnitRunner'
        vectorDrawables.useSupportLibrary = true
        multiDexEnabled true
    }

    buildTypes {
        debug {
            debuggable true
            minifyEnabled false

            buildConfigField("String", "DEBUG_USR", localProperties['DEBUG_USR'] ?: "\"\"")
            buildConfigField("String", "DEBUG_PS", localProperties['DEBUG_PS'] ?: "\"\"")
            buildConfigField "String", "URL", "\"https://dev-apigee.coppel.space/rhconecta/api/\""
        }
        release {
            // Disable the debuggable option
            debuggable false
            // Enables code shrinking, obfuscation, and optimization for only
            // your project's release build type
            minifyEnabled true
            // Includes the default ProGuard rules files that are packaged with
            // the Android Gradle plugin. To learn more, go to the section about
            // R8 configuration files
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            zipAlignEnabled true

            buildConfigField("String", "DEBUG_USR", "\"\"")
            buildConfigField("String", "DEBUG_PS", "\"\"")
            buildConfigField "String", "URL", "\"https://api-colaborapp.coppel.com/rhconecta/api/\""

        }

        buildTypes.each {
            Properties localProperties = getLocalProperties()
            it.buildConfigField("String", "ZENDESK_URL", localProperties['ZENDESK_URL'] ?: "\"\"")
            it.buildConfigField("String", "ZENDESK_APPLICATION", localProperties['ZENDESK_APPLICATION'] ?: "\"\"")
            it.buildConfigField("String", "ZENDESK_CLIENT", localProperties['ZENDESK_CLIENT'] ?: "\"\"")
            it.buildConfigField("String", "ZENDESK_ACCOUNT", localProperties['ZENDESK_ACCOUNT'] ?: "\"\"")
            it.buildConfigField("String", "APP_CENTER_ID", localProperties['APP_CENTER_ID'] ?: "\"\"")
        }
    }

    buildFeatures {
        dataBinding true
        buildConfig = true
    }


    lintOptions {
        checkReleaseBuilds false
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }

    packagingOptions {
        exclude 'META-INF/proguard/androidx-annotations.pro'
    }

}
repositories {
    maven { url 'https://zendesk.jfrog.io/zendesk/repo' }
    maven {
        url 'https://pkgs.dev.azure.com/MicrosoftDeviceSDK/DuoSDK-Public/_packaging/Duo-SDK-Feed/maven/v1'
    }
}

dependencies {
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'
    implementation 'androidx.fragment:fragment:1.3.6'
    implementation 'androidx.appcompat:appcompat:1.6.0'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation project(":library")
    implementation project(":componentCalendar")
    implementation project(":collapsiblecalendarview")
    implementation project(":weekcalendar")

    // Dagger
    implementation "com.google.dagger:dagger:${rootProject.ext.daggerVersion}"
    implementation project(':weekcalendar')
    annotationProcessor "com.google.dagger:dagger-compiler:${rootProject.ext.daggerVersion}"
    // Koin
    //implementation "org.koin:koin-android-viewmodel:1.0.2"

    //implementation "io.insert-koin:koin-android:3.5.3"
    implementation "io.insert-koin:koin-android-viewmodel:2.0.1"

    /** KOTLIN */
    // Standard library
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:2.3.0"
    // Coroutines
    api "org.jetbrains.kotlinx:kotlinx-coroutines-core:1.4.2"
    api "org.jetbrains.kotlinx:kotlinx-coroutines-android:1.4.2"

    // Android
    implementation 'androidx.multidex:multidex:2.0.0'
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation 'androidx.lifecycle:lifecycle-viewmodel-ktx:2.5.1'
    implementation 'androidx.lifecycle:lifecycle-runtime-ktx:2.5.1'
    implementation 'androidx.exifinterface:exifinterface:1.0.0'
    implementation 'com.google.android.material:material:1.6.1'
    implementation 'androidx.recyclerview:recyclerview:1.0.0'
    implementation 'androidx.cardview:cardview:1.0.0'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'

    // ButterKnife
    //implementation "com.jakewharton:butterknife:${rootProject.ext.butterKnifeVersion}"
    //annotationProcessor "com.jakewharton:butterknife-compiler:${rootProject.ext.butterKnifeVersion}"
    implementation 'com.jakewharton:butterknife:10.2.3'
    annotationProcessor 'com.jakewharton:butterknife-compiler:10.2.3'

    // SquareUp
    implementation "com.squareup.retrofit2:retrofit:${rootProject.ext.retrofitVersion}"
    implementation "com.squareup.retrofit2:converter-gson:${rootProject.ext.retrofitVersion}"
    implementation "com.squareup.okhttp3:logging-interceptor:${rootProject.ext.okhttpInterceptorVersion}"
    implementation "com.squareup:otto:${rootProject.ext.ottoVersion}"

    // Glide
    //implementation "com.github.bumptech.glide:glide:${rootProject.ext.glideVersion}"
    implementation "com.github.bumptech.glide:glide:4.9.0"
    //annotationProcessor "com.github.bumptech.glide:compiler:${rootProject.ext.glideVersion}"
    annotationProcessor "com.github.bumptech.glide:compiler:4.9.0"

    // Lottie
    implementation "com.airbnb.android:lottie:${rootProject.ext.lottieVersion}"

    // CameraView
    //implementation "com.otaliastudios:cameraview:${rootProject.ext.cameraViewVersion}"
    implementation "com.otaliastudios:cameraview:2.7.2"

    // Firebase
    implementation "com.google.firebase:firebase-analytics:${rootProject.ext.firebaseAnalyticsVersion}"
    implementation "com.google.firebase:firebase-database:${rootProject.ext.firebaseDatabaseVersion}"
    implementation "com.google.firebase:firebase-messaging:${rootProject.ext.firebaseMessagingVersion}"
    implementation "com.google.firebase:firebase-config:${rootProject.ext.firebaseConfigVersion}"
    implementation "com.google.firebase:firebase-iid:21.1.0"
    //crashlitycs
    // Declare the dependencies for the Crashlytics and Analytics libraries
    // When using the BoM, you don't specify versions in Firebase library dependencies
    implementation 'com.google.firebase:firebase-analytics:20.1.2'
    implementation 'com.google.firebase:firebase-perf:19.0.3'
    implementation 'com.google.firebase:firebase-crashlytics:18.2.9'

    // PageIndicator
    implementation("com.github.vivchar:ViewPagerIndicator:1.1.0")
    implementation 'com.github.carlosmuvi:SegmentedProgressBar:0.8.1'
    implementation "com.github.skydoves:balloon:1.4.7"

    // App Center
    implementation "com.microsoft.appcenter:appcenter-analytics:4.1.0"
    implementation "com.microsoft.appcenter:appcenter-crashes:4.1.0"

    // Testing
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.2.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.6.1'

    // Visionarios
    //implementation 'com.synnapps:carouselview:0.1.5'
    implementation 'com.squareup.picasso:picasso:2.5.2'
    implementation 'com.facebook.stetho:stetho:1.5.0'
    implementation 'com.github.ed-george:AndroidVimeoExtractor:1.1.2'

    implementation 'net.yslibrary.keyboardvisibilityevent:keyboardvisibilityevent:2.2.1'

    // Support Libs
    implementation 'com.github.chrisbanes:PhotoView:2.1.3'
    //implementation 'com.github.MikeOrtiz:TouchImageView:1.4.0' // Support Lib
    implementation "io.noties.markwon:core:4.6.0"
    implementation "io.noties.markwon:html:4.6.0"

    implementation 'com.github.bumptech.glide:glide:4.9.0'
    annotationProcessor 'com.github.bumptech.glide:compiler:4.9.0'

    implementation 'org.greenrobot:eventbus:3.1.1'
    //implementation 'me.dm7.barcodescanner:zxing:1.9.13'
    implementation 'me.dm7.barcodescanner:zxing:1.9.8'

    //sweet alert
    implementation 'cn.pedant.sweetalert:library:1.3'

    implementation("org.jetbrains.kotlinx:kotlinx-coroutines-android:1.5.2")

    api group: 'com.zendesk', name: 'messaging', version: '5.2.5'
    api group: 'com.zendesk', name: 'support', version: '5.0.9'
    api group: 'com.zendesk', name: 'answerbot', version: '3.0.8'
    api group: 'com.zendesk', name: 'chat', version: '3.3.6'
    implementation group: 'com.zendesk', name: 'chat-providers', version: '3.3.6'
//    api group: 'com.zendesk', module:'answerbot-providers', version: '3.0.8'

    //microsoft identity libreries
    implementation 'com.android.volley:volley:1.2.1'
    implementation "com.microsoft.identity.client:msal:5.7.0"

    /*if (findProject(':msal') != null) {
        // For developer team only.
        localImplementation project(':msal')
            externalImplementation "com.microsoft.identity.client:msal:4.8.1"
    }
    else {
        // Downloads and Builds MSAL from maven central.
        implementation "com.microsoft.identity.client:msal:4.8.1"
    }*/

    implementation(platform("com.google.firebase:firebase-bom:33.1.2"))
    // Use the Firebase BOM for version management

    //implementation(platform("com.google.firebase:firebase-bom:33.5.0"))
    implementation("com.google.firebase:firebase-storage")
    implementation("com.google.firebase:firebase-auth")

}
configurations.all {
    resolutionStrategy {
        force 'com.squareup.retrofit2:retrofit:2.6.0'
        //vulnerabilidad
        force 'com.google.guava:guava:33.3.1-jre'
    }
}

realm {
    syncEnabled = true
}

def getLocalProperties() {
    Properties properties = new Properties()
    if (file('../local.properties').exists()) {
        properties.load(new FileInputStream(file('../local.properties')))
    }
    return properties
}

apply plugin: 'com.google.gms.google-services'
apply plugin: 'kotlin-android'
apply plugin: 'com.google.firebase.crashlytics'
apply plugin: 'com.google.firebase.firebase-perf'